# -*- coding: utf-8 -*-
"""DL Lab 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15xUVaF5x5FwR2XRzE6XTVS05R0NAa3jd
"""

pip install tensorflow numpy matplotlib

from tensorflow.keras.datasets import imdb

# Load the IMDB dataset
(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=5000)

from tensorflow.keras.preprocessing import sequence

max_review_length = 500
x_train = sequence.pad_sequences(x_train, maxlen=max_review_length)
x_test = sequence.pad_sequences(x_test, maxlen=max_review_length)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense

embedding_vector_length = 32

lstm_model = Sequential()
lstm_model.add(Embedding(input_dim=5000, output_dim=embedding_vector_length, input_length=max_review_length))
lstm_model.add(LSTM(100))
lstm_model.add(Dense(1, activation='sigmoid'))

lstm_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
print(lstm_model.summary())

# Train the LSTM model
lstm_model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=3, batch_size=64)

from tensorflow.keras.layers import Bidirectional

bilstm_model = Sequential()
bilstm_model.add(Embedding(input_dim=5000, output_dim=embedding_vector_length, input_length=max_review_length))
bilstm_model.add(Bidirectional(LSTM(100)))
bilstm_model.add(Dense(1, activation='sigmoid'))

bilstm_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
print(bilstm_model.summary())

# Train the BiLSTM model
bilstm_model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=3, batch_size=64)

lstm_scores = lstm_model.evaluate(x_test, y_test, verbose=0)
print(f"LSTM Test Accuracy: {lstm_scores[1]*100:.2f}%")

bilstm_scores = bilstm_model.evaluate(x_test, y_test, verbose=0)
print(f"BiLSTM Test Accuracy: {bilstm_scores[1]*100:.2f}%")